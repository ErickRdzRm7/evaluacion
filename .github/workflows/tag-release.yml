name: Tag Release and Deploy to ECR

on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  bump-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Bump version and push tag
        id: version
        run: |
          NEW_VERSION=$(npm version patch --no-git-tag-version | sed 's/v//')
          git add package.json
          git commit -m "chore: release v${NEW_VERSION}"
          git tag -a "v${NEW_VERSION}" -m "Version ${NEW_VERSION}"
          git push origin main --follow-tags
          echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT

  deploy-to-ecr:
    needs: bump-version
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag and push
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY_URI }}
          ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: v${{ needs.bump-version.outputs.new_version }}
          SHORT_SHA: ${{ github.sha }}
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          # Construir imagen con múltiples tags
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          BRANCH_NAME_SAFE=$(echo "${BRANCH_NAME}" | sed 's/\//-/g')
          docker build \
            -t $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG \
            -t $ECR_REGISTRY/$ECR_REPO:latest \
            -t $ECR_REGISTRY/$ECR_REPO:$BRANCH_NAME_SAFE \
            -t $ECR_REGISTRY/$ECR_REPO:$SHORT_SHA .
          
          # Empujar todos los tags
          docker push $ECR_REGISTRY/$ECR_REPO --all-tags
          
          # Salida para verificación
          echo "===================================="
          echo "Imágenes subidas a ECR:"
          echo "- Versión: $ECR_REGISTRY/$ECR_REPO:$IMAGE_TAG"
          echo "- Latest: $ECR_REGISTRY/$ECR_REPO:latest"
          echo "- Rama: $ECR_REGISTRY/$ECR_REPO:$BRANCH_NAME_SAFE"
          echo "- Commit: $ECR_REGISTRY/$ECR_REPO:$SHORT_SHA"
          echo "===================================="