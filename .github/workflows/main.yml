name: CI - Build & Test
# Disparador ÚNICO: Se ejecuta solo cuando se abre o actualiza un PR hacia tus ramas principales.
on:
  pull_request:
    branches:
      - main
      - development
      - staging

  workflow_dispatch: # Permite ejecución manual
  
permissions:
  contents: write
env:
  NODE_VERSION: '24.3.0'
  AWS_REGION: us-east-2

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    permissions: 
      id-token: write
      contents: read  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # fetch-depth: 0 es necesario para que el script de Atlantis pueda obtener el hash del commit
        with:
          fetch-depth: 0 

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./package-lock.json

      - name: Install Node.js dependencies
        run: make install-ci

      - name: Lint
        run: make Lint

      - name: Run Unit Tests
        run: make test
      - name: Check if Terraform is installed
        id: check_terraform
        run: |
          if ! command -v terraform &> /dev/null; then
            echo "Terraform not found. Installing..."
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install -y terraform
          else
            echo "Terraform is already installed."
          fi

      - name: Run terraform init
        run: make terraform-init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Run terraform validate
        run: make terraform-validate